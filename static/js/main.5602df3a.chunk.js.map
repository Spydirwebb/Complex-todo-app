{"version":3,"sources":["components/TodoItem.js","components/CompletedItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","CompletedItem","dateCompleted","TodosList","isTodos","todos","map","Header","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoContainer","setTodos","completedTodos","setCompletedTodos","getCurrentDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yy","getFullYear","toString","substr","handleChange","setTimeout","handleCompleted","doneTodo","delTodo","filter","newTodo","uuidv4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5602df3a.chunk.js","sourcesContent":["/*TodoItem.js\r\n/src/components\r\n*/\r\n\r\nimport React from \"react\";\r\n\r\nconst TodoItem = (props) => {\r\n    const { completed, id, title } = props.todo;\r\n\r\n    return (\r\n    <li className=\"todoList-item\">\r\n        <input type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={() => props.handleChangeProps(id)}/>\r\n        <button onClick={() => props.deleteTodoProps(id)}>\r\n            Delete\r\n        </button>\r\n        <span className={completed ? \"todoList-item-completed\" : null}>\r\n            {title}\r\n        </span>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n","/*TodoItem.js\r\n/src/components\r\n*/\r\n\r\nimport React from \"react\";\r\n\r\nconst CompletedItem = (props) => {\r\n    const { dateCompleted, id, title } = props.todo;\r\n\r\n    return (\r\n    <li className=\"todoList-item\">\r\n        <button onClick={() => props.deleteTodoProps(id)}>\r\n            Delete\r\n        </button>\r\n        <span className=\"todoList-item-completed\">\r\n            {title}</span>\r\n        <span className=\"todoList-date-completed\">\r\n            {dateCompleted}</span>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default CompletedItem;\r\n","/*TodosList.js\r\n/src/components/\r\n*/\r\n\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem.js\";\r\nimport CompletedItem from \"./CompletedItem.js\";\r\n\r\nconst TodosList = (props) =>  {\r\n    let isTodos=true;\r\n    if(props.type === \"completed\"){\r\n        isTodos=false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-container\">\r\n            {isTodos\r\n                ?props.todos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChangeProps={props.handleChangeProps}\r\n                        deleteTodoProps={props.deleteTodoProps} />\r\n                ))\r\n                : props.todos.map(todo => (\r\n                    <CompletedItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        deleteTodoProps={props.deleteTodoProps} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosList;\r\n","/*Header.js\r\n/src/components/\r\n*/\r\n\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className=\"app-header\">\r\n            <h1>Complex Todo App</h1>\r\n            <p>Please add to-dos item(s) throughthe input field</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","/*InputTodo.js\r\n/src/components/\r\n*/\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst InputTodo = (props) => {\r\n    /////state\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n    });\r\n\r\n    //onChange\r\n    const onChange = e => {\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    //handleSubmit\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.addTodoProps(inputText.title);\r\n        setInputText({\r\n            title: \"\",\r\n        });\r\n    };\r\n\r\n    return (   //text input, submit button\r\n        <form onSubmit={handleSubmit} className=\"input_form-container\">\r\n            <input type=\"text\"\r\n                className=\"input_form-text\"\r\n                placeholder=\"Add Todo...\"\r\n                value={inputText.title}\r\n                name=\"title\"\r\n                onChange={onChange}/>\r\n            <input type=\"submit\" className=\"input_form-submit\" value=\"Submit\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputTodo;\r\n","/*TodoContainer.js\r\nsrc/components/\r\n*/\r\n\r\n//modules\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n//components\r\nimport TodosList from \"./TodosList.js\";\r\nimport Header from \"./Header.js\";\r\nimport InputTodo from \"./InputTodo.js\";\r\n\r\n\r\nconst TodoContainer = (props) => {\r\n    /////state\r\n    const [todos, setTodos] = useState([]);\r\n    const [completedTodos, setCompletedTodos] = useState([]);\r\n\r\n    const url_api = \"https://jsonplaceholder.typicode.com/todos?_limit=10\";\r\n\r\n    /*getCurrentDate\r\n    returns date clicked in dd/mm/yy format\r\n    */\r\n    const getCurrentDate = () => {\r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2,\"0\");\r\n        let mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n        let yy = today.getFullYear().toString().substr(-2);\r\n\r\n        today = mm+\"/\"+dd+\"/\"+yy;\r\n        return today;\r\n    }\r\n    /////methods\r\n    /*handleChange\r\n    params: id of todo\r\n        note: bubbled up from TodoItem.js\r\n    function\r\n        -check if props.id matches a todo.id\r\n        -true - flips todo.completed\r\n    */\r\n    const handleChange = id => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.completed = true;\r\n                    setTimeout(() => { handleCompleted(todo); }, 1000);\r\n                }\r\n                return todo;\r\n            })\r\n        )\r\n    };\r\n\r\n    const handleCompleted = todo => {\r\n        const doneTodo = {\r\n            id: todo.id,\r\n            title: todo.title,\r\n            dateCompleted: getCurrentDate(),\r\n        }\r\n        setCompletedTodos([...completedTodos, doneTodo ]);\r\n        delTodo(todo.id);\r\n\r\n        return completedTodos;\r\n    };\r\n\r\n    /*delTodo\r\n    params: id of todo\r\n        note: bubbled up from TodoItem.js\r\n    function: removes todo object from state based on todo.id\r\n    */\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id\r\n            }),\r\n        ])\r\n    };\r\n\r\n    /*delCompleted\r\n    params: id of completed\r\n        note: bubbled up from CompletedItem.js\r\n    function: removes completed object from state based on completed.id\r\n    */\r\n    const delCompleted = id => {\r\n        setCompletedTodos([\r\n            ...completedTodos.filter(completed => {\r\n                return completed.id !== id\r\n            }),\r\n        ])\r\n    };\r\n\r\n    /*addTodoItem\r\n    params: title of todo to add\r\n        note: bubbled up from InputTodo.js\r\n    function: adds new todo object to state\r\n    */\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false,\r\n        }\r\n        setTodos([...todos, newTodo]);\r\n    };\r\n\r\n    /////effect\r\n    /*useEffect(() => {\r\n        axios\r\n            .get(url_api)\r\n            .then(res => setTodos(res.data))\r\n    },[])\r\n    */\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            <InputTodo addTodoProps={addTodoItem}/>\r\n            <TodosList\r\n                type=\"todo\"\r\n                todos={todos}\r\n                handleChangeProps={handleChange}\r\n                deleteTodoProps={delTodo} />\r\n            <h2 className=\"completed_header\">Completed Todos</h2>\r\n            <h3 className=\"completed_label-title\">Task<span className=\"completed_label-date\">Date Completed</span></h3>\r\n            <TodosList\r\n                type=\"completed\"\r\n                todos={completedTodos}\r\n                handleChangeProps={handleChange}\r\n                deleteTodoProps={delCompleted} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoContainer;\r\n","import './App.css';\nimport TodoContainer from \"./components/TodoContainer.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}